services:
  # para autenticação (armazenamento de usuarios)

  db:
    container_name: db
    image: postgres:16.4-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - project_network

  # projeto principal
  django:
    container_name: django
    environment:
      DJANGO_HOST_PORT: 8000
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: db  # serviço do postgres acima
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: rabbitmq  # serviço do rabbitmq acima
    restart: always
    build:
      context: ./django
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./django:/code
      - ./django/media:/code/media
    ports:
      - "8000:8000"
      - "3005:3005"
    depends_on:
      - db
    networks:
      - project_network

      
volumes:
  pgdata:

networks:
  project_network: