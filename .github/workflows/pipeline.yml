name: Django CI/CD Pipeline

on:
  push:
    branches:
      - production
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:16.4-alpine
        env:
          POSTGRES_DB: database
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          PGPORT: 5434
        ports:
          - 5434:5434

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.12" 

      - name: Install dependencies
        working-directory: ./django
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Database to be Ready
        run: |
          until pg_isready -h localhost -p 5434; do sleep 1; done

      - name: Run Django tests
        working-directory: ./django
        run: |
          coverage run manage.py test --noinput
          coverage report

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set branch-specific tag
        id: set-tag
        run: |
          if [[ "${{ github.ref_name }}" == "production" ]]; then
            echo "IMAGE_TAG=maxxstk/85-servicos-daora:prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "IMAGE_TAG=maxxstk/85-servicos-daora:dev" >> $GITHUB_ENV
          else
            echo "Unexpected branch: ${{ github.ref_name }}"
            exit 1
          fi      

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.IMAGE_TAG }}          